// many definitions borrowed from Wine's winuser.h and wingdi.h

#ifndef __NTWIN32_H__
#define __NTWIN32_H__

#include "ntapi.h"
#include <stdarg.h>
#include <wingdi.h>
#include <winuser.h>

#ifndef WINXP

// Windows 2000
#define NTWIN32_BASICMSG_CALLBACK 2
#define NTWIN32_CREATE_CALLBACK 9
#define NTWIN32_MINMAX_CALLBACK 17
#define NTWIN32_NCCALC_CALLBACK 20
#define NTWIN32_THREAD_INIT_CALLBACK 74
#define NUM_USER32_CALLBACKS 90
#define NUMBER_OF_USER_SHARED_SECTIONS 29

#else

// Windows XP
#define NTWIN32_CREATE_CALLBACK 10
#define NTWIN32_MINMAX_CALLBACK 18
#define NTWIN32_NCCALC_CALLBACK 21
#define NTWIN32_THREAD_INIT_CALLBACK 75
#define NUM_USER32_CALLBACKS 98
#define NUMBER_OF_USER_SHARED_SECTIONS 33

#endif

#define GDI_OBJECT_DC      0x01
#define GDI_OBJECT_REGION  0x04
#define GDI_OBJECT_BITMAP  0x05
#define GDI_OBJECT_PALETTE 0x08
#define GDI_OBJECT_FONT    0x0a
#define GDI_OBJECT_BRUSH   0x10
#define GDI_OBJECT_EMF     0x21
#define GDI_OBJECT_PEN     0x30
#define GDI_OBJECT_EXTPEN  0x50

NTSTATUS NTAPI NtGdiInit(void);
BOOLEAN NTAPI NtGdiComputeXformCoefficients(HANDLE);
HANDLE  NTAPI NtGdiCreateCompatibleDC(HANDLE);
HANDLE  NTAPI NtGdiCreateSolidBrush(COLORREF,ULONG);
BOOLEAN NTAPI NtGdiDeleteObjectApp(HANDLE);
BOOLEAN NTAPI NtGdiEnumFontChunk(HANDLE,HANDLE,ULONG,PULONG,PVOID);
BOOLEAN NTAPI NtGdiEnumFontClose(HANDLE);
HANDLE  NTAPI NtGdiEnumFontOpen(HANDLE,ULONG,ULONG,ULONG,ULONG,ULONG,PULONG);
BOOLEAN NTAPI NtGdiGetTextMetricsW(HANDLE,PVOID,ULONG);
HANDLE  NTAPI NtGdiGetStockObject(ULONG Index);
HANDLE  NTAPI NtGdiOpenDCW(ULONG,ULONG,ULONG,ULONG,ULONG,ULONG,PVOID);
NTSTATUS NTAPI NtGdiQueryFontAssocInfo(HANDLE);
ULONG   NTAPI NtGdiSetFontEnumeration(ULONG);

typedef struct USER_SHARED_MEMORY_INFO {
	ULONG Flags;
	PVOID Address;
} USER_SHARED_MEMORY_INFO, *PUSER_SHARED_MEMORY_INFO;

typedef struct _USER_PROCESS_CONNECT_INFO {
	ULONG Version;
	ULONG Unknown;
	ULONG MinorVersion;
	PVOID Ptr[4];
	USER_SHARED_MEMORY_INFO SharedSection[NUMBER_OF_USER_SHARED_SECTIONS];
} USER_PROCESS_CONNECT_INFO, *PUSER_PROCESS_CONNECT_INFO;

typedef struct _NTWINCALLBACKRETINFO {
	LRESULT	val;
	ULONG	size;
	PVOID	buf;
} NTWINCALLBACKRETINFO;

typedef struct tagNTWNDCLASSEX {
	UINT	Size;
	UINT	Style;
	PVOID	WndProc;
	INT	ClsExtra;
	INT	WndExtra;
	PVOID	Instance;
	HANDLE	Icon;
	HANDLE	Cursor;
	HANDLE	Background;
	PWSTR	MenuName;
	PWSTR	ClassName;
	HANDLE	IconSm;
} NTWNDCLASSEX, *PNTWNDCLASSEX;

typedef struct _NTSIMPLEMESSAGEPACKEDINFO {
	PVOID*	wininfo;
	ULONG	msg;
	WPARAM	wparam;
	LPARAM	lparam;
	PVOID	wndproc;
	ULONG	(CALLBACK *func)(PVOID,ULONG,WPARAM,LPARAM,PVOID);
} NTSIMPLEMESSAGEPACKEDINFO;

typedef struct _NTMINMAXPACKEDINFO {
	PVOID*	wininfo;
	ULONG	msg;
	WPARAM	wparam;
	MINMAXINFO minmax;
	PVOID	wndproc;
	ULONG	(CALLBACK *func)(PVOID,ULONG,WPARAM,MINMAXINFO*,PVOID);
} NTMINMAXPACKEDINFO;

typedef struct _NTPACKEDPOINTERINFO {
	ULONG	sz;
	ULONG	x;
	ULONG	count;
	PVOID	kernel_address;
	ULONG	adjust_info_ofs;
	BOOL	no_adjust;
} NTPACKEDPOINTERINFO;

typedef struct _NTCREATESTRUCT {
	LPVOID	lpCreateParams;
	PVOID	hInstance;
	HANDLE	hMenu;
	HANDLE	hwndParent;
	INT	cy;
	INT	cx;
	INT	y;
	INT	x;
	LONG	style;
	PVOID	lpszName;
	PVOID	lpszClass;
	DWORD	dwExStyle;
} NTCREATESTRUCT;

typedef struct _NTCREATEPACKEDINFO {
	NTPACKEDPOINTERINFO pi;
	PVOID*	wininfo;
	ULONG	msg;
	WPARAM	wparam;
	BOOL	cs_nonnull;
	NTCREATESTRUCT cs;
	PVOID	wndproc;
	ULONG	(CALLBACK *func)(PVOID,ULONG,WPARAM,NTCREATESTRUCT,PVOID);
} NTCREATEPACKEDINFO;

typedef struct _NTNCCALCSIZEPACKEDINFO {
	PVOID*	wininfo;
	ULONG	msg;
	BOOL	wparam;
	PVOID	wndproc;
	ULONG	(CALLBACK *func)(PVOID,ULONG,WPARAM,NCCALCSIZE_PARAMS*,PVOID);
	NCCALCSIZE_PARAMS params;
	WINDOWPOS winpos;
} NTNCCALCSIZEPACKEDINFO;

typedef struct _NTMOVINGPACKEDINFO {
	PVOID*	wininfo;
	ULONG	msg;
	WPARAM	wparam;
	RECT	rect;
	PVOID	wndproc;
	ULONG	(CALLBACK *func)(PVOID,ULONG,WPARAM,VOID*,PVOID);
} NTMOVINGPACKEDINFO;

typedef struct tagUSER32_UNICODE_STRING {
	ULONG Length;
	ULONG MaximumLength;
	PWSTR Buffer;
} USER32_UNICODE_STRING, *PUSER32_UNICODE_STRING;

NTSTATUS NTAPI NtUserCallNoParam(ULONG);
NTSTATUS NTAPI NtUserCallOneParam(ULONG,ULONG);
HANDLE   NTAPI NtUserCreateWindowEx(ULONG,PUSER32_UNICODE_STRING,PUSER32_UNICODE_STRING,ULONG,LONG,LONG,LONG,LONG,HANDLE,HANDLE,PVOID,PVOID,BOOL);
NTSTATUS NTAPI NtUserCallTwoParam(ULONG,ULONG,ULONG);
HANDLE NTAPI   NtUserFindExistingCursorIcon(PUNICODE_STRING,PUNICODE_STRING,PVOID);
HANDLE NTAPI   NtUserGetDC(HANDLE);
LONG NTAPI     NtUserGetClassInfo(PVOID,PUNICODE_STRING,PVOID,PULONG,ULONG);
BOOLEAN NTAPI  NtUserGetMessage(LPMSG,HWND,UINT,UINT);
HANDLE NTAPI   NtUserGetThreadDesktop(ULONG,ULONG);
NTSTATUS NTAPI NtUserGetThreadState(ULONG);
NTSTATUS NTAPI NtUserInitializeClientPfnArrays(PVOID,PVOID,PVOID,PVOID);
NTSTATUS NTAPI NtUserProcessConnect(HANDLE,PVOID,ULONG);
ATOM NTAPI     NtUserRegisterClassExWOW(PNTWNDCLASSEX,PUNICODE_STRING,PVOID,USHORT,ULONG,ULONG);
BOOL NTAPI     NtUserResolveDesktop(HANDLE,PVOID,ULONG,PVOID);
BOOL NTAPI     NtUserShowWindow(HANDLE,int);

#endif // __NTWIN32_H__
